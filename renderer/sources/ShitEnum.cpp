#include "ShitEnum.hpp"

#include "ShitPredefines.hpp"
#include "ShitUtility.hpp"

namespace Shit {
// component size, component num, normalized
static FormatAttribute formatAttributeArray[]{
    {"UNDEFINED"},                                                     // = 0,
    {"R4G4_UNORM_PACK8", FormatNumeric::UNORM, BaseFormat::RG, 4, 4},  // = 1,
    {"R4G4B4A4_UNORM_PACK16", FormatNumeric::UNORM, BaseFormat::RGBA, 4, 4, 4,
     4},  // = 2,
    {"B4G4R4A4_UNORM_PACK16", FormatNumeric::UNORM, BaseFormat::BGRA, 4, 4, 4,
     4},  // = 3,
    {"R5G6B5_UNORM_PACK16", FormatNumeric::UNORM, BaseFormat::RGB, 5, 6,
     5},  // = 4,
    {"B5G6R5_UNORM_PACK16", FormatNumeric::UNORM, BaseFormat::BGR, 5, 6,
     5},  // = 5,
    {"R5G5B5A1_UNORM_PACK16", FormatNumeric::UNORM, BaseFormat::RGBA, 5, 5, 5,
     1},  // = 6,
    {"B5G5R5A1_UNORM_PACK16", FormatNumeric::UNORM, BaseFormat::BGRA, 5, 5, 5,
     1},  // = 7,
    {"A1R5G5B5_UNORM_PACK16", FormatNumeric::UNORM, BaseFormat::BGRA, 5, 5, 5,
     1},                                                               // = 8,
    {"R8_UNORM", FormatNumeric::UNORM, BaseFormat::R, 8},              // = 9,
    {"R8_SNORM", FormatNumeric::SNORM, BaseFormat::R, 8},              // = 10,
    {"R8_USCALED", FormatNumeric::USCALED, BaseFormat::R, 8},          // = 11,
    {"R8_SSCALED", FormatNumeric::SSCALED, BaseFormat::R, 8},          // = 12,
    {"R8_UINT", FormatNumeric::UINT, BaseFormat::R, 8},                // = 13,
    {"R8_SINT", FormatNumeric::SINT, BaseFormat::R, 8},                // = 14,
    {"R8_SRGB", FormatNumeric::SRGB, BaseFormat::R, 8},                // = 15,
    {"R8G8_UNORM", FormatNumeric::UNORM, BaseFormat::RG, 8, 8},        // = 16,
    {"R8G8_SNORM", FormatNumeric::SNORM, BaseFormat::RG, 8, 8},        // = 17,
    {"R8G8_USCALED", FormatNumeric::USCALED, BaseFormat::RG, 8, 8},    // = 18,
    {"R8G8_SSCALED", FormatNumeric::SSCALED, BaseFormat::RG, 8, 8},    // = 19,
    {"R8G8_UINT", FormatNumeric::UINT, BaseFormat::RG, 8, 8},          // = 20,
    {"R8G8_SINT", FormatNumeric::SINT, BaseFormat::RG, 8, 8},          // = 21,
    {"R8G8_SRGB", FormatNumeric::SRGB, BaseFormat::RG, 8, 8},          // = 22,
    {"R8G8B8_UNORM", FormatNumeric::UNORM, BaseFormat::RGB, 8, 8, 8},  // = 23,
    {"R8G8B8_SNORM", FormatNumeric::SNORM, BaseFormat::RGB, 8, 8, 8},  // = 24,
    {"R8G8B8_USCALED", FormatNumeric::USCALED, BaseFormat::RGB, 8, 8,
     8},  // = 25,
    {"R8G8B8_SSCALED", FormatNumeric::SSCALED, BaseFormat::RGB, 8, 8,
     8},                                                               // = 26,
    {"R8G8B8_UINT", FormatNumeric::UINT, BaseFormat::RGB, 8, 8, 8},    // = 27,
    {"R8G8B8_SINT", FormatNumeric::SINT, BaseFormat::RGB, 8, 8, 8},    // = 28,
    {"R8G8B8_SRGB", FormatNumeric::SRGB, BaseFormat::RGB, 8, 8, 8},    // = 29,
    {"B8G8R8_UNORM", FormatNumeric::UNORM, BaseFormat::BGR, 8, 8, 8},  // = 30,
    {"B8G8R8_SNORM", FormatNumeric::SNORM, BaseFormat::BGR, 8, 8, 8},  // = 31,
    {"B8G8R8_USCALED", FormatNumeric::USCALED, BaseFormat::BGR, 8, 8,
     8},  // = 32,
    {"B8G8R8_SSCALED", FormatNumeric::SSCALED, BaseFormat::BGR, 8, 8,
     8},                                                             // = 33,
    {"B8G8R8_UINT", FormatNumeric::UINT, BaseFormat::BGR, 8, 8, 8},  // = 34,
    {"B8G8R8_SINT", FormatNumeric::SINT, BaseFormat::BGR, 8, 8, 8},  // = 35,
    {"B8G8R8_SRGB", FormatNumeric::SRGB, BaseFormat::BGR, 8, 8, 8},  // = 36,
    {"R8G8B8A8_UNORM", FormatNumeric::UNORM, BaseFormat::RGBA, 8, 8, 8,
     8},  // = 37,
    {"R8G8B8A8_SNORM", FormatNumeric::SNORM, BaseFormat::RGBA, 8, 8, 8,
     8},  // = 38,
    {"R8G8B8A8_USCALED", FormatNumeric::USCALED, BaseFormat::RGBA, 8, 8, 8,
     8},  // = 39,
    {"R8G8B8A8_SSCALED", FormatNumeric::SSCALED, BaseFormat::RGBA, 8, 8, 8,
     8},  // = 40,
    {"R8G8B8A8_UINT", FormatNumeric::UINT, BaseFormat::RGBA, 8, 8, 8,
     8},  // = 41,
    {"R8G8B8A8_SINT", FormatNumeric::SINT, BaseFormat::RGBA, 8, 8, 8,
     8},  // = 42,
    {"R8G8B8A8_SRGB", FormatNumeric::SRGB, BaseFormat::RGBA, 8, 8, 8,
     8},  // = 43,
    {"B8G8R8A8_UNORM", FormatNumeric::UNORM, BaseFormat::BGRA, 8, 8, 8,
     8},  // = 44,
    {"B8G8R8A8_SNORM", FormatNumeric::SNORM, BaseFormat::BGRA, 8, 8, 8,
     8},  // = 45,
    {"B8G8R8A8_USCALED", FormatNumeric::USCALED, BaseFormat::BGRA, 8, 8, 8,
     8},  // = 46,
    {"B8G8R8A8_SSCALED", FormatNumeric::SSCALED, BaseFormat::BGRA, 8, 8, 8,
     8},  // = 47,
    {"B8G8R8A8_UINT", FormatNumeric::UINT, BaseFormat::BGRA, 8, 8, 8,
     8},  // = 48,
    {"B8G8R8A8_SINT", FormatNumeric::SINT, BaseFormat::BGRA, 8, 8, 8,
     8},  // = 49,
    {"B8G8R8A8_SRGB", FormatNumeric::SRGB, BaseFormat::BGRA, 8, 8, 8,
     8},  // = 50,
    {"A8B8G8R8_UNORM_PACK32", FormatNumeric::UNORM, BaseFormat::RGBA, 8, 8, 8,
     8},  // = 51,
    {"A8B8G8R8_SNORM_PACK32", FormatNumeric::SNORM, BaseFormat::RGBA, 8, 8, 8,
     8},  // = 52,
    {"A8B8G8R8_USCALED_PACK32", FormatNumeric::USCALED, BaseFormat::RGBA, 8, 8,
     8, 8},  // = 53,
    {"A8B8G8R8_SSCALED_PACK32", FormatNumeric::SSCALED, BaseFormat::RGBA, 8, 8,
     8, 8},  // = 54,
    {"A8B8G8R8_UINT_PACK32", FormatNumeric::UINT, BaseFormat::RGBA, 8, 8, 8,
     8},  // = 55,
    {"A8B8G8R8_SINT_PACK32", FormatNumeric::SINT, BaseFormat::RGBA, 8, 8, 8,
     8},  // = 56,
    {"A8B8G8R8_SRGB_PACK32", FormatNumeric::SRGB, BaseFormat::RGBA, 8, 8, 8,
     8},  // = 57,
    {"A2R10G10B10_UNORM_PACK32", FormatNumeric::UNORM, BaseFormat::RGBA, 10, 10,
     10, 2},  // = 58,
    {"A2R10G10B10_SNORM_PACK32", FormatNumeric::SNORM, BaseFormat::RGBA, 10, 10,
     10, 2},  // = 59,
    {"A2R10G10B10_USCALED_PACK32", FormatNumeric::USCALED, BaseFormat::RGBA, 10,
     10, 10, 2},  // = 60,
    {"A2R10G10B10_SSCALED_PACK32", FormatNumeric::SSCALED, BaseFormat::RGBA, 10,
     10, 10, 2},  // = 61,
    {"A2R10G10B10_UINT_PACK32", FormatNumeric::UINT, BaseFormat::RGBA, 10, 10,
     10, 2},  // = 62,
    {"A2R10G10B10_SINT_PACK32", FormatNumeric::SINT, BaseFormat::RGBA, 10, 10,
     10, 2},  // = 63,
    {"A2B10G10R10_UNORM_PACK32", FormatNumeric::UNORM, BaseFormat::RGBA, 10, 10,
     10, 2},  // = 64,
    {"A2B10G10R10_SNORM_PACK32", FormatNumeric::SNORM, BaseFormat::RGBA, 10, 10,
     10, 2},  // = 65,
    {"A2B10G10R10_USCALED_PACK32", FormatNumeric::USCALED, BaseFormat::RGBA, 10,
     10, 10, 2},  // = 66,
    {"A2B10G10R10_SSCALED_PACK32", FormatNumeric::SSCALED, BaseFormat::RGBA, 10,
     10, 10, 2},  // = 67,
    {"A2B10G10R10_UINT_PACK32", FormatNumeric::UINT, BaseFormat::RGBA, 10, 10,
     10, 2},  // = 68,
    {"A2B10G10R10_SINT_PACK32", FormatNumeric::SINT, BaseFormat::RGBA, 10, 10,
     10, 2},                                                         // = 69,
    {"R16_UNORM", FormatNumeric::UNORM, BaseFormat::R, 16},          // = 70,
    {"R16_SNORM", FormatNumeric::SNORM, BaseFormat::R, 16},          // = 71,
    {"R16_USCALED", FormatNumeric::USCALED, BaseFormat::R, 16},      // = 72,
    {"R16_SSCALED", FormatNumeric::SSCALED, BaseFormat::R, 16},      // = 73,
    {"R16_UINT", FormatNumeric::UINT, BaseFormat::R, 16},            // = 74,
    {"R16_SINT", FormatNumeric::SINT, BaseFormat::R, 16},            // = 75,
    {"R16_SFLOAT", FormatNumeric::SFLOAT, BaseFormat::R, 16},        // = 76,
    {"R16G16_UNORM", FormatNumeric::UNORM, BaseFormat::RG, 16, 16},  // = 77,
    {"R16G16_SNORM", FormatNumeric::SNORM, BaseFormat::RG, 16, 16},  // = 78,
    {"R16G16_USCALED", FormatNumeric::USCALED, BaseFormat::RG, 16,
     16},  // = 79,
    {"R16G16_SSCALED", FormatNumeric::SSCALED, BaseFormat::RG, 16,
     16},                                                              // = 80,
    {"R16G16_UINT", FormatNumeric::UINT, BaseFormat::RG, 16, 16},      // = 81,
    {"R16G16_SINT", FormatNumeric::SINT, BaseFormat::RG, 16, 16},      // = 82,
    {"R16G16_SFLOAT", FormatNumeric::SFLOAT, BaseFormat::RG, 16, 16},  // = 83,
    {"R16G16B16_UNORM", FormatNumeric::UNORM, BaseFormat::RGB, 16, 16,
     16},  // = 84,
    {"R16G16B16_SNORM", FormatNumeric::SNORM, BaseFormat::RGB, 16, 16,
     16},  // = 85,
    {"R16G16B16_USCALED", FormatNumeric::USCALED, BaseFormat::RGB, 16, 16,
     16},  // = 86,
    {"R16G16B16_SSCALED", FormatNumeric::SSCALED, BaseFormat::RGB, 16, 16,
     16},  // = 87,
    {"R16G16B16_UINT", FormatNumeric::UINT, BaseFormat::RGB, 16, 16,
     16},  // = 88,
    {"R16G16B16_SINT", FormatNumeric::SINT, BaseFormat::RGB, 16, 16,
     16},  // = 89,
    {"R16G16B16_SFLOAT", FormatNumeric::SFLOAT, BaseFormat::RGB, 16, 16,
     16},  // = 90,
    {"R16G16B16A16_UNORM", FormatNumeric::UNORM, BaseFormat::RGBA, 16, 16, 16,
     16},  // = 91,
    {"R16G16B16A16_SNORM", FormatNumeric::SNORM, BaseFormat::RGBA, 16, 16, 16,
     16},  // = 92,
    {"R16G16B16A16_USCALED", FormatNumeric::USCALED, BaseFormat::RGBA, 16, 16,
     16, 16},  // = 93,
    {"R16G16B16A16_SSCALED", FormatNumeric::SSCALED, BaseFormat::RGBA, 16, 16,
     16, 16},  // = 94,
    {"R16G16B16A16_UINT", FormatNumeric::UINT, BaseFormat::RGBA, 16, 16, 16,
     16},  // = 95,
    {"R16G16B16A16_SINT", FormatNumeric::SINT, BaseFormat::RGBA, 16, 16, 16,
     16},  // = 96,
    {"R16G16B16A16_SFLOAT", FormatNumeric::SFLOAT, BaseFormat::RGBA, 16, 16, 16,
     16},                                                              // = 97,
    {"R32_UINT", FormatNumeric::UINT, BaseFormat::R, 32},              // = 98,
    {"R32_SINT", FormatNumeric::SINT, BaseFormat::R, 32},              // = 99,
    {"R32_SFLOAT", FormatNumeric::SFLOAT, BaseFormat::R, 32},          // = 100,
    {"R32G32_UINT", FormatNumeric::UINT, BaseFormat::RG, 32, 32},      // = 101,
    {"R32G32_SINT", FormatNumeric::SINT, BaseFormat::RG, 32, 32},      // = 102,
    {"R32G32_SFLOAT", FormatNumeric::SFLOAT, BaseFormat::RG, 32, 32},  // = 103,
    {"R32G32B32_UINT", FormatNumeric::UINT, BaseFormat::RGB, 32, 32,
     32},  // = 104,
    {"R32G32B32_SINT", FormatNumeric::SINT, BaseFormat::RGB, 32, 32,
     32},  // = 105,
    {"R32G32B32_SFLOAT", FormatNumeric::SFLOAT, BaseFormat::RGB, 32, 32,
     32},  // = 106,
    {"R32G32B32A32_UINT", FormatNumeric::UINT, BaseFormat::RGBA, 32, 32, 32,
     32},  // = 107,
    {"R32G32B32A32_SINT", FormatNumeric::SINT, BaseFormat::RGBA, 32, 32, 32,
     32},  // = 108,
    {"R32G32B32A32_SFLOAT", FormatNumeric::SFLOAT, BaseFormat::RGBA, 32, 32, 32,
     32},                                                              // = 109,
    {"R64_UINT", FormatNumeric::UINT, BaseFormat::R, 64},              // = 110,
    {"R64_SINT", FormatNumeric::SINT, BaseFormat::R, 64},              // = 111,
    {"R64_SFLOAT", FormatNumeric::SFLOAT, BaseFormat::R, 64},          // = 112,
    {"R64G64_UINT", FormatNumeric::UINT, BaseFormat::RG, 64, 64},      // = 113,
    {"R64G64_SINT", FormatNumeric::SINT, BaseFormat::RG, 64, 64},      // = 114,
    {"R64G64_SFLOAT", FormatNumeric::SFLOAT, BaseFormat::RG, 64, 64},  // = 115,
    {"R64G64B64_UINT", FormatNumeric::UINT, BaseFormat::RGB, 64, 64,
     64},  // = 116,
    {"R64G64B64_SINT", FormatNumeric::SINT, BaseFormat::RGB, 64, 64,
     64},  // = 117,
    {"R64G64B64_SFLOAT", FormatNumeric::SFLOAT, BaseFormat::RGB, 64, 64,
     64},  // = 118,
    {"R64G64B64A64_UINT", FormatNumeric::UINT, BaseFormat::RGBA, 64, 64, 64,
     64},  // = 119,
    {"R64G64B64A64_SINT", FormatNumeric::SINT, BaseFormat::RGBA, 64, 64, 64,
     64},  // = 120,
    {"R64G64B64A64_SFLOAT", FormatNumeric::SFLOAT, BaseFormat::RGBA, 64, 64, 64,
     64},                                                // = 121,
    {"B10G11R11_UFLOAT_PACK32", FormatNumeric::UFLOAT},  // = 122,
    {"E5B9G9R9_UFLOAT_PACK32", FormatNumeric::UFLOAT},   // = 123,
    {"D16_UNORM", FormatNumeric::UNORM, BaseFormat::DEPTH, 0, 0, 0, 0,
     16},  // = 124,
    {"X8_D24_UNORM_PACK32", FormatNumeric::UNORM, BaseFormat::DEPTH, 0, 0, 0, 0,
     24, 0, 8},  // = 125,
    {"D32_SFLOAT", FormatNumeric::SFLOAT, BaseFormat::DEPTH, 0, 0, 0, 0,
     32},  // = 126,
    {"S8_UINT", FormatNumeric::UINT, BaseFormat::STENCIL, 0, 0, 0, 0, 0,
     8},  // = 127,
    {"D16_UNORM_S8_UINT", FormatNumeric::UNORM, BaseFormat::DEPTH_STENCIL, 0, 0,
     0, 0, 16, 8},  // 8 UINT",  // = 128,
    {"D24_UNORM_S8_UINT", FormatNumeric::UNORM, BaseFormat::DEPTH_STENCIL, 0, 0,
     0, 0, 24, 8},  // 8 UINT",  // = 129,
    {"D32_SFLOAT_S8_UINT", FormatNumeric::SFLOAT, BaseFormat::DEPTH_STENCIL, 0,
     0, 0, 0, 32, 8},                                     // 8 UINT", // = 130,
    {"BC1_RGB_UNORM_BLOCK", FormatNumeric::UNORM},        // = 131,
    {"BC1_RGB_SRGB_BLOCK", FormatNumeric::SRGB},          // = 132,
    {"BC1_RGBA_UNORM_BLOCK", FormatNumeric::UNORM},       // = 133,
    {"BC1_RGBA_SRGB_BLOCK", FormatNumeric::SRGB},         // = 134,
    {"BC2_UNORM_BLOCK", FormatNumeric::UNORM},            // = 135,
    {"BC2_SRGB_BLOCK", FormatNumeric::SRGB},              // = 136,
    {"BC3_UNORM_BLOCK", FormatNumeric::UNORM},            // = 137,
    {"BC3_SRGB_BLOCK", FormatNumeric::SRGB},              // = 138,
    {"BC4_UNORM_BLOCK", FormatNumeric::UNORM},            // = 139,
    {"BC4_SNORM_BLOCK", FormatNumeric::SNORM},            // = 140,
    {"BC5_UNORM_BLOCK", FormatNumeric::UNORM},            // = 141,
    {"BC5_SNORM_BLOCK", FormatNumeric::SNORM},            // = 142,
    {"BC6H_UFLOAT_BLOCK", FormatNumeric::UFLOAT},         // = 143,
    {"BC6H_SFLOAT_BLOCK", FormatNumeric::SFLOAT},         // = 144,
    {"BC7_UNORM_BLOCK", FormatNumeric::UNORM},            // = 145,
    {"BC7_SRGB_BLOCK", FormatNumeric::SRGB},              // = 146,
    {"ETC2_R8G8B8_UNORM_BLOCK", FormatNumeric::UNORM},    // = 147,
    {"ETC2_R8G8B8_SRGB_BLOCK", FormatNumeric::SRGB},      // = 148,
    {"ETC2_R8G8B8A1_UNORM_BLOCK", FormatNumeric::UNORM},  // = 149,
    {"ETC2_R8G8B8A1_SRGB_BLOCK", FormatNumeric::SRGB},    // = 150,
    {"ETC2_R8G8B8A8_UNORM_BLOCK", FormatNumeric::UNORM},  // = 151,
    {"ETC2_R8G8B8A8_SRGB_BLOCK", FormatNumeric::SRGB},    // = 152,
    {"EAC_R11_UNORM_BLOCK", FormatNumeric::UNORM},        // = 153,
    {"EAC_R11_SNORM_BLOCK", FormatNumeric::SNORM},        // = 154,
    {"EAC_R11G11_UNORM_BLOCK", FormatNumeric::UNORM},     // = 155,
    {"EAC_R11G11_SNORM_BLOCK", FormatNumeric::SNORM},     // = 156,
    {"ASTC_4x4_UNORM_BLOCK", FormatNumeric::UNORM},       // = 157,
    {"ASTC_4x4_SRGB_BLOCK", FormatNumeric::SRGB},         // = 158,
    {"ASTC_5x4_UNORM_BLOCK", FormatNumeric::UNORM},       // = 159,
    {"ASTC_5x4_SRGB_BLOCK", FormatNumeric::SRGB},         // = 160,
    {"ASTC_5x5_UNORM_BLOCK", FormatNumeric::UNORM},       // = 161,
    {"ASTC_5x5_SRGB_BLOCK", FormatNumeric::SRGB},         // = 162,
    {"ASTC_6x5_UNORM_BLOCK", FormatNumeric::UNORM},       // = 163,
    {"ASTC_6x5_SRGB_BLOCK", FormatNumeric::SRGB},         // = 164,
    {"ASTC_6x6_UNORM_BLOCK", FormatNumeric::UNORM},       // = 165,
    {"ASTC_6x6_SRGB_BLOCK", FormatNumeric::SRGB},         // = 166,
    {"ASTC_8x5_UNORM_BLOCK", FormatNumeric::UNORM},       // = 167,
    {"ASTC_8x5_SRGB_BLOCK", FormatNumeric::SRGB},         // = 168,
    {"ASTC_8x6_UNORM_BLOCK", FormatNumeric::UNORM},       // = 169,
    {"ASTC_8x6_SRGB_BLOCK", FormatNumeric::SRGB},         // = 170,
    {"ASTC_8x8_UNORM_BLOCK", FormatNumeric::UNORM},       // = 171,
    {"ASTC_8x8_SRGB_BLOCK", FormatNumeric::SRGB},         // = 172,
    {"ASTC_10x5_UNORM_BLOCK", FormatNumeric::UNORM},      // = 173,
    {"ASTC_10x5_SRGB_BLOCK", FormatNumeric::SRGB},        // = 174,
    {"ASTC_10x6_UNORM_BLOCK", FormatNumeric::UNORM},      // = 175,
    {"ASTC_10x6_SRGB_BLOCK", FormatNumeric::SRGB},        // = 176,
    {"ASTC_10x8_UNORM_BLOCK", FormatNumeric::UNORM},      // = 177,
    {"ASTC_10x8_SRGB_BLOCK", FormatNumeric::SRGB},        // = 178,
    {"ASTC_10x10_UNORM_BLOCK", FormatNumeric::UNORM},     // = 179,
    {"ASTC_10x10_SRGB_BLOCK", FormatNumeric::SRGB},       // = 180,
    {"ASTC_12x10_UNORM_BLOCK", FormatNumeric::UNORM},     // = 181,
    {"ASTC_12x10_SRGB_BLOCK", FormatNumeric::SRGB},       // = 182,
    {"ASTC_12x12_UNORM_BLOCK", FormatNumeric::UNORM},     // = 183,
    {"ASTC_12x12_SRGB_BLOCK", FormatNumeric::SRGB},       // = 184,
    {"G8B8G8R8_422_UNORM", FormatNumeric::UNORM},         // = 1000156000,
    {"B8G8R8G8_422_UNORM", FormatNumeric::UNORM},         // = 1000156001,
    {"G8_B8_R8_3PLANE_420_UNORM", FormatNumeric::UNORM},  // = 1000156002,
    {"G8_B8R8_2PLANE_420_UNORM", FormatNumeric::UNORM},   // = 1000156003,
    {"G8_B8_R8_3PLANE_422_UNORM", FormatNumeric::UNORM},  // = 1000156004,
    {"G8_B8R8_2PLANE_422_UNORM", FormatNumeric::UNORM},   // = 1000156005,
    {"G8_B8_R8_3PLANE_444_UNORM", FormatNumeric::UNORM},  // = 1000156006,
    {"R10X6_UNORM_PACK16", FormatNumeric::UNORM},         // = 1000156007,
    {"R10X6G10X6_UNORM_2PACK16", FormatNumeric::UNORM},   // = 1000156008,
    {"R10X6G10X6B10X6A10X6_UNORM_4PACK16",
     FormatNumeric::UNORM},  // = 1000156009,
    {"G10X6B10X6G10X6R10X6_422_UNORM_4PACK16",
     FormatNumeric::UNORM},  // = 1000156010,
    {"B10X6G10X6R10X6G10X6_422_UNORM_4PACK16",
     FormatNumeric::UNORM},  // = 1000156011,
    {"G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16",
     FormatNumeric::UNORM},  // = 1000156012,
    {"G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16",
     FormatNumeric::UNORM},  // = 1000156013,
    {"G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16",
     FormatNumeric::UNORM},  // = 1000156014,
    {"G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16",
     FormatNumeric::UNORM},  // = 1000156015,
    {"G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16",
     FormatNumeric::UNORM},                              // = 1000156016,
    {"R12X4_UNORM_PACK16", FormatNumeric::UNORM},        // = 1000156017,
    {"R12X4G12X4_UNORM_2PACK16", FormatNumeric::UNORM},  // = 1000156018,
    {"R12X4G12X4B12X4A12X4_UNORM_4PACK16",
     FormatNumeric::UNORM},  // = 1000156019,
    {"G12X4B12X4G12X4R12X4_422_UNORM_4PACK16",
     FormatNumeric::UNORM},  // = 1000156020,
    {"B12X4G12X4R12X4G12X4_422_UNORM_4PACK16",
     FormatNumeric::UNORM},  // = 1000156021,
    {"G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16",
     FormatNumeric::UNORM},  // = 1000156022,
    {"G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16",
     FormatNumeric::UNORM},  // = 1000156023,
    {"G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16",
     FormatNumeric::UNORM},  // = 1000156024,
    {"G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16",
     FormatNumeric::UNORM},  // = 1000156025,
    {"G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16",
     FormatNumeric::UNORM},                                  // = 1000156026,
    {"G16B16G16R16_422_UNORM", FormatNumeric::UNORM},        // = 1000156027,
    {"B16G16R16G16_422_UNORM", FormatNumeric::UNORM},        // = 1000156028,
    {"G16_B16_R16_3PLANE_420_UNORM", FormatNumeric::UNORM},  // = 1000156029,
    {"G16_B16R16_2PLANE_420_UNORM", FormatNumeric::UNORM},   // = 1000156030,
    {"G16_B16_R16_3PLANE_422_UNORM", FormatNumeric::UNORM},  // = 1000156031,
    {"G16_B16R16_2PLANE_422_UNORM", FormatNumeric::UNORM},   // = 1000156032,
    {"G16_B16_R16_3PLANE_444_UNORM", FormatNumeric::UNORM},  // = 1000156033,
    {"PVRTC1_2BPP_UNORM_BLOCK_IMG", FormatNumeric::UNORM},   // = 1000054000,
    {"PVRTC1_4BPP_UNORM_BLOCK_IMG", FormatNumeric::UNORM},   // = 1000054001,
    {"PVRTC2_2BPP_UNORM_BLOCK_IMG", FormatNumeric::UNORM},   // = 1000054002,
    {"PVRTC2_4BPP_UNORM_BLOCK_IMG", FormatNumeric::UNORM},   // = 1000054003,
    {"PVRTC1_2BPP_SRGB_BLOCK_IMG", FormatNumeric::SRGB},     // = 1000054004,
    {"PVRTC1_4BPP_SRGB_BLOCK_IMG", FormatNumeric::SRGB},     // = 1000054005,
    {"PVRTC2_2BPP_SRGB_BLOCK_IMG", FormatNumeric::SRGB},     // = 1000054006,
    {"PVRTC2_4BPP_SRGB_BLOCK_IMG", FormatNumeric::SRGB},     // = 1000054007,
    {"ASTC_4x4_SFLOAT_BLOCK_EXT", FormatNumeric::SFLOAT},    // = 1000066000,
    {"ASTC_5x4_SFLOAT_BLOCK_EXT", FormatNumeric::SFLOAT},    // = 1000066001,
    {"ASTC_5x5_SFLOAT_BLOCK_EXT", FormatNumeric::SFLOAT},    // = 1000066002,
    {"ASTC_6x5_SFLOAT_BLOCK_EXT", FormatNumeric::SFLOAT},    // = 1000066003,
    {"ASTC_6x6_SFLOAT_BLOCK_EXT", FormatNumeric::SFLOAT},    // = 1000066004,
    {"ASTC_8x5_SFLOAT_BLOCK_EXT", FormatNumeric::SFLOAT},    // = 1000066005,
    {"ASTC_8x6_SFLOAT_BLOCK_EXT", FormatNumeric::SFLOAT},    // = 1000066006,
    {"ASTC_8x8_SFLOAT_BLOCK_EXT", FormatNumeric::SFLOAT},    // = 1000066007,
    {"ASTC_10x5_SFLOAT_BLOCK_EXT", FormatNumeric::SFLOAT},   // = 1000066008,
    {"ASTC_10x6_SFLOAT_BLOCK_EXT", FormatNumeric::SFLOAT},   // = 1000066009,
    {"ASTC_10x8_SFLOAT_BLOCK_EXT", FormatNumeric::SFLOAT},   // = 1000066010,
    {"ASTC_10x10_SFLOAT_BLOCK_EXT", FormatNumeric::SFLOAT},  // = 1000066011,
    {"ASTC_12x10_SFLOAT_BLOCK_EXT", FormatNumeric::SFLOAT},  // = 1000066012,
    {"ASTC_12x12_SFLOAT_BLOCK_EXT", FormatNumeric::SFLOAT},  // = 1000066013,
    {"A4R4G4B4_UNORM_PACK16_EXT", FormatNumeric::UNORM},     // = 1000340000,
    {"A4B4G4R4_UNORM_PACK16_EXT", FormatNumeric::UNORM},     // = 1000340001,
};
FormatAttribute GetFormatAttribute(Format format) {
  return formatAttributeArray[static_cast<size_t>(format)];
}
uint32_t GetFormatComponentNum(Format format) {
  auto &a = formatAttributeArray[static_cast<size_t>(format)];
  uint32_t ret = 0;
  ret += (a.componentSizeR > 0);
  ret += (a.componentSizeG > 0);
  ret += (a.componentSizeB > 0);
  ret += (a.componentSizeA > 0);
  ret += (a.componentSizeDepth > 0);
  ret += (a.componentSizeStencil > 0);
  return ret;
}
bool GetFormatNormalized(Format format) {
  auto a = formatAttributeArray[static_cast<size_t>(format)].formatNumeric;
  return a == FormatNumeric::UNORM || a == FormatNumeric::SNORM;
}
uint32_t GetFormatSize(Format format) {
  auto &a = formatAttributeArray[static_cast<size_t>(format)];
  return (a.componentSizeR + a.componentSizeG + a.componentSizeB +
          a.componentSizeA + a.componentSizeDepth + a.componentSizeStencil +
          a.componentSizeX) /
         8;
}

DataType GetFormatDataType(Format format) {
  auto a = formatAttributeArray[static_cast<size_t>(format)].formatNumeric;
  switch (a) {
    case FormatNumeric::UNORM:
      ST_FALLTHROUGH;
    case FormatNumeric::SRGB:
      return DataType::UNSIGNED_BYTE;
    case FormatNumeric::SNORM:
      return DataType::BYTE;
    case FormatNumeric::USCALED:
      ST_FALLTHROUGH;
    case FormatNumeric::UFLOAT:
      ST_FALLTHROUGH;
    case FormatNumeric::SFLOAT:
      ST_FALLTHROUGH;
    case FormatNumeric::SSCALED:
      return DataType::FLOAT;
    case FormatNumeric::UINT:
      return DataType::UNSIGNED_INT;
    case FormatNumeric::SINT:
      return DataType::INT;
    default:
      ST_THROW("failed to find datatype of format", (int)format);
  }
}
const char *GetGLSLKeywordName(GLSLKeyword keyword) {
  static const char *strGLSLKeywordName[]{
      "const",
      "uniform",
      "buffer",
      "shared",
      "attribute",
      "varying",
      "coherent",
      "volatile",
      "restrict",
      "readonly",
      "writeonly",
      "atomic_uint",
      "layout",
      "centroid",
      "flat",
      "smooth",
      "noperspective",
      "patch",
      "sample",
      "invariant",
      "precise",
      "break",
      "continue",
      "do",
      "for",
      "while",
      "switch",
      "case",
      "default",
      "if",
      "else",
      "subroutine",
      "in",
      "out",
      "inout",
      "int",
      "void",
      "bool",
      "true",
      "false",
      "float",
      "double",
      "discard",
      "return",
      "vec2",
      "vec3",
      "vec4",
      "ivec2",
      "ivec3",
      "ivec4",
      "bvec2",
      "bvec3",
      "bvec4",
      "uint",
      "uvec2",
      "uvec3",
      "uvec4",
      "dvec2",
      "dvec3",
      "dvec4",
      "mat2",
      "mat3",
      "mat4",
      "mat2x2",
      "mat2x3",
      "mat2x4",
      "mat3x2",
      "mat3x3",
      "mat3x4",
      "mat4x2",
      "mat4x3",
      "mat4x4",
      "dmat2",
      "dmat3",
      "dmat4",
      "dmat2x2",
      "dmat2x3",
      "dmat2x4",
      "dmat3x2",
      "dmat3x3",
      "dmat3x4",
      "dmat4x2",
      "dmat4x3",
      "dmat4x4",
      "lowp",
      "mediump",
      "highp",
      "precision",

      "sampler1D",
      "sampler1DShadow",
      "sampler1DArray",
      "sampler1DArrayShadow",
      "isampler1D",
      "isampler1DArray",
      "usampler1D",
      "usampler1DArray",
      "sampler2D",
      "sampler2DShadow",
      "sampler2DArray",
      "sampler2DArrayShadow",
      "isampler2D",
      "isampler2DArray",
      "usampler2D",
      "usampler2DArray",
      "sampler2DRect",
      "sampler2DRectShadow",
      "isampler2DRect",
      "usampler2DRect",
      "sampler2DMS",
      "isampler2DMS",
      "usampler2DMS",
      "sampler2DMSArray",
      "isampler2DMSArray",
      "usampler2DMSArray",
      "sampler3D",
      "isampler3D",
      "usampler3D",
      "samplerCube",
      "samplerCubeShadow",
      "isamplerCube",
      "usamplerCube",
      "samplerCubeArray",
      "samplerCubeArrayShadow",
      "isamplerCubeArray",
      "usamplerCubeArray",
      "samplerBuffer",
      "isamplerBuffer",
      "usamplerBuffer",
      "image1D",
      "iimage1D",
      "uimage1D",
      "image1DArray",
      "iimage1DArray",
      "uimage1DArray",
      "image2D",
      "iimage2D",
      "uimage2D",
      "image2DArray",
      "iimage2DArray",
      "uimage2DArray",
      "image2DRect",
      "iimage2DRect",
      "uimage2DRect",
      "image2DMS",
      "iimage2DMS",
      "uimage2DMS",
      "image2DMSArray",
      "iimage2DMSArray",
      "uimage2DMSArray",
      "image3D",
      "iimage3D",
      "uimage3D",
      "imageCube",
      "iimageCube",
      "uimageCube",
      "imageCubeArray",
      "iimageCubeArray",
      "uimageCubeArray",
      "imageBuffer",
      "iimageBuffer",
      "uimageBuffer",
      "struct",

      // vulkan
      "texture1D",
      "texture1DArray",
      "itexture1D",
      "itexture1DArray",
      "utexture1D",
      "utexture1DArray",
      "texture2D",
      "texture2DArray",
      "itexture2D",
      "itexture2DArray",
      "utexture2D",
      "utexture2DArray",
      "texture2DRect",
      "itexture2DRect",
      "utexture2DRect",
      "texture2DMS",
      "itexture2DMS",
      "utexture2DMS",
      "texture2DMSArray",
      "itexture2DMSArray",
      "utexture2DMSArray",
      "texture3D",
      "itexture3D",
      "utexture3D",
      "textureCube",
      "itextureCube",
      "utextureCube",
      "textureCubeArray",
      "itextureCubeArray",
      "utextureCubeArray",
      "textureBuffer",
      "itextureBuffer",
      "utextureBuffer",
      "sampler",
      "samplerShadow",
      "subpassInput",
      "isubpassInput",
      "usubpassInput",
      "subpassInputMS",
      "isubpassInputMS",
      "usubpassInputMS",
  };
  return strGLSLKeywordName[static_cast<size_t>(keyword)];
}

}  // namespace Shit